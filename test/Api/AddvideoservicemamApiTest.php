<?php
/**
 * AddvideoservicemamApiTest
 * PHP version 5
 *
 * @category Class
 * @package  de\addvideo\client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * AddVideo REST API v1
 *
 * <h1>Welcome to AddVideo | easy video integration into your project</h1><p>AddVideo offers the integration of professional online video services and capabilities such as CDN, encoding, asset management and complex distribution workflows  with your favourite CMS. AddVideo processes and distributes your video contents as required, without interface- or CDN-specific implementations. Using AddVideo you will get:</p><ul><li>API: a powerful REST-API with free client SDKs available in many different programming languages incl. examples at http://github.com/addvideo</li><li>Encoding: media processing and video encoding services</li><li>CDN: use diverse very powerful global CDNs to distribute your contents</li><li>OTT: access to useful functionalities via the API</li><li>Development, Service und Maintenance: our team of high class software engineers and online video specialists is located in Frankfurt/Germany</li><li>Powerfull Infrastructure: system operations in high class data centres in Germany</li><li>In General: a fast growing set of features</li></ul><p>It has never been easier to add professional video modules to your platform on demand. AddVideo helps to slimline your integration efforts and provides the whole video workflow accessible through a simple programming interface.</p>
 *
 * OpenAPI spec version: 1
 * Contact: info@addvideo.de
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace de\addvideo\client;

use \de\addvideo\client\Configuration;
use \de\addvideo\client\ApiClient;
use \de\addvideo\client\ApiException;
use \de\addvideo\client\ObjectSerializer;

/**
 * AddvideoservicemamApiTest Class Doc Comment
 *
 * @category Class
 * @package  de\addvideo\client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AddvideoservicemamApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for addEntry
     *
     * Add a new Entry object.
     *
     */
    public function testAddEntry()
    {

    }

    /**
     * Test case for addFlavor
     *
     * Add a new Flavor object.
     *
     */
    public function testAddFlavor()
    {

    }

    /**
     * Test case for addMAMService
     *
     * Add a new MAMService object.
     *
     */
    public function testAddMAMService()
    {

    }

    /**
     * Test case for addMetadata
     *
     * Add a new Metadata object.
     *
     */
    public function testAddMetadata()
    {

    }

    /**
     * Test case for deleteEntry
     *
     * Delete Entry object matching the given id.
     *
     */
    public function testDeleteEntry()
    {

    }

    /**
     * Test case for deleteFlavor
     *
     * Delete Flavor object matching the given id.
     *
     */
    public function testDeleteFlavor()
    {

    }

    /**
     * Test case for deleteMAMService
     *
     * Delete MAMService object matching the given id.
     *
     */
    public function testDeleteMAMService()
    {

    }

    /**
     * Test case for deleteMetadata
     *
     * Delete Metadata object matching the given id.
     *
     */
    public function testDeleteMetadata()
    {

    }

    /**
     * Test case for getEntry
     *
     * Get Entry object for id.
     *
     */
    public function testGetEntry()
    {

    }

    /**
     * Test case for getFlavor
     *
     * Get Flavor object for id.
     *
     */
    public function testGetFlavor()
    {

    }

    /**
     * Test case for getMAMService
     *
     * Get MAMService object for id.
     *
     */
    public function testGetMAMService()
    {

    }

    /**
     * Test case for getMetadata
     *
     * Get Metadata object for id.
     *
     */
    public function testGetMetadata()
    {

    }

    /**
     * Test case for listEntries
     *
     * List Entry objects depending on filter.
     *
     */
    public function testListEntries()
    {

    }

    /**
     * Test case for listFlavors
     *
     * List Flavor objects depending on filter.
     *
     */
    public function testListFlavors()
    {

    }

    /**
     * Test case for listMAMServices
     *
     * List MAMService objects depending on filter.
     *
     */
    public function testListMAMServices()
    {

    }

    /**
     * Test case for listMetadatas
     *
     * List Metadata objects depending on filter.
     *
     */
    public function testListMetadatas()
    {

    }

    /**
     * Test case for updateEntry
     *
     * Update Entry object.
     *
     */
    public function testUpdateEntry()
    {

    }

    /**
     * Test case for updateFlavor
     *
     * Update Flavor object.
     *
     */
    public function testUpdateFlavor()
    {

    }

    /**
     * Test case for updateMAMService
     *
     * Update MAMService object.
     *
     */
    public function testUpdateMAMService()
    {

    }

    /**
     * Test case for updateMetadata
     *
     * Update Metadata object.
     *
     */
    public function testUpdateMetadata()
    {

    }

}
